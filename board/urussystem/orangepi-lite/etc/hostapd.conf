interface=wlan0
bssid=02:81:d0:2d:c8:96
#bridge=br0

# this is the driver that must be used for ath9k and other similar chipset devices
driver=nl80211

#  yes, it says 802.11g, but the n-speeds get layered on top of it
hw_mode=g

#  this enables the 802.11n speeds and capabilities ...  You will also need to enable WMM for full HT functionality.
ieee80211n=1
wmm_enabled=0

#  self-explanatory, but not all channels may be enabled for you - check /var/log/messages for details
channel=6
#  also, make sure you survey your 2.4GHz environment, and find some uncluttered/uncrowded channels

#   adjust to fit your location
#country_code=US
#   Here is the authoritative list of countries:
#   http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm

#   let your AP broadcast the settings that agree with the above-mentioned regulatory requirements per country
#ieee80211d=1

#   adjust to fit your preference
ssid=urus-nas

#   this is how I set mine up - works perfectly for iPhone, Mac OS X (SnowLeopard) & Linux
auth_algs=1
wpa=2
wpa_passphrase=urusnas1234
wpa_key_mgmt=WPA-PSK
wpa_pairwise=CCMP
rsn_pairwise=CCMP
macaddr_acl=0

#   these have to be set in agreement w/ channel and some other values... read hostapd.conf docs
#ht_capab=[HT40+][HT40-][HT20][SHORT-GI-20][SHORT-GI-40]
#                                                        ...  these can be tuned to specific capabilities per device/chipset

#  IIUC, this enables reauthentication for clients, so the passphrase doesn't have to be re-entered
#eap_reauth_period=360000000

# makes the SSID visible and broadcasted
ignore_broadcast_ssid=0

#  debugging output - uncomment them to activate; issue  hostapd -d /etc/hostapd/hostapd.conf
#  to get debugging info in visible/real-time form
logger_syslog=-1
logger_syslog_level=2
logger_stdout=-1
logger_stdout_level=2

# Interface for separate control program. If this is specified, hostapd
# will create this directory and a UNIX domain socket for listening to requests
# from external programs (CLI/GUI, etc.) for status information and
# configuration. The socket file will be named based on the interface name, so
# multiple hostapd processes/interfaces can be run at the same time if more
# than one interface is used.
# /var/run/hostapd is the recommended directory for sockets and by default,
# hostapd_cli will use it when trying to connect with hostapd.
ctrl_interface=/var/run/hostapd

# Access control for the control interface can be configured by setting the
# directory to allow only members of a group to use sockets. This way, it is
# possible to run hostapd as root (since it needs to change network
# configuration and open raw sockets) and still allow GUI/CLI components to be
# run as non-root users. However, since the control interface can be used to
# change the network configuration, this access needs to be protected in many
# cases. By default, hostapd is configured to use gid 0 (root). If you
# want to allow non-root users to use the contron interface, add a new group
# and change this value to match with that group. Add users that should have
# control interface access to this group.
#
# This variable can be a group name or gid.
#ctrl_interface_group=wheel
ctrl_interface_group=9999
#wds_sta=1
#wds_bridge=wds-br0

#per_sta_vif=0
#vlan_bridge=brvlan

#eapol_key_index_workaround=0
#eap_server=0
#own_ip_addr=127.0.0.1

beacon_int=100
dtim_period=1
max_num_sta=255
rts_threshold=-1
fragm_threshold=-1
